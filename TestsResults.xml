<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="560" errors="0" failures="1" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2017-05-09" time="16:07:09">
  <environment user="AB73541" machine-name="SGC340" cwd="C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot" user-domain="SAVVIS" platform="Microsoft Windows 7 Enterprise |C:\WINDOWS|\Device\Harddisk0\Partition1" nunit-version="2.5.8.0" os-version="6.1.7601" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-GB" current-uiculture="en-US" />
  <test-suite type="PowerShell" name="Pester" executed="True" result="Failure" success="False" time="52.7079" asserts="0">
    <results>
      <test-suite type="TestFixture" name="Testing all Modules against default PSScriptAnalyzer rule-set" executed="True" result="Success" success="True" time="1.9625" asserts="0" description="Testing all Modules against default PSScriptAnalyzer rule-set">
        <results>
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1465" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0249" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.024" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.038" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.044" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.2656" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.043" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.038" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Modules against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.04" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Testing all Script against default PSScriptAnalyzer rule-set" executed="True" result="Success" success="True" time="43.7845" asserts="0" description="Testing all Script against default PSScriptAnalyzer rule-set">
        <results>
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.2158" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.038" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.031" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.035" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1364" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.008" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.177" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0268" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0249" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.022" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0248" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1417" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.133" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.039" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.042" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.1414" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.038" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="1.1324" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.023" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0269" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0231" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0234" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1287" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.033" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.033" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.032" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.6114" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.033" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0289" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.1464" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.033" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.01" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.038" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.1652" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0426" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.04" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0379" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="1.9702" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0231" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0236" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0254" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.022" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.025" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1155" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0264" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.0267" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0256" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.1411" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.038" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0286" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0309" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.041" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.041" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.1489" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="2.236" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0258" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0251" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0244" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0248" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1389" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.03" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.035" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="1.5553" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0307" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0307" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0274" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="1.6604" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.041" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="6.6575" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0265" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.026" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1276" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.033" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.041" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.734" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1538" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.038" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.7333" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.032" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0307" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.033" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.037" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.7203" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.035" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="3.6303" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0226" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0242" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1692" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.036" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.1424" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.034" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.1434" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.035" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="1.4591" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0309" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0233" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0231" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.022" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1367" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.035" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalAliases" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalFunctions" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.033" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.2545" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.038" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.04" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.2543" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseCompatibleCmdlets" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseLiteralInitializerForHashtable" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSShouldProcess" time="1.8847" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0645" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.045" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.036" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Integration Tests" executed="True" result="Success" success="True" time="0.2606" asserts="0" description="Integration Tests">
        <results>
          <test-case description="Module 'SlackBot' imports cleanly" name="Integration Tests.Module 'SlackBot' imports cleanly" time="0.2606" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Private Function Tests" executed="True" result="Success" success="True" time="0.6831" asserts="0" description="Private Function Tests">
        <results>
          <test-case description="Write-Log -Message requires an input" name="Private Function Tests.Write-Log -Message requires an input" time="0.2315" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Write-Log -Level should reject Test" name="Private Function Tests.Write-Log -Level should reject Test" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Write-Log -Level Info should work" name="Private Function Tests.Write-Log -Level Info should work" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Random number msg 1206360897'" name="Private Function Tests.C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Random number msg 1206360897'" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Info'" name="Private Function Tests.C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Info'" time="0.0204" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Write-Log -Level Warn should work" name="Private Function Tests.Write-Log -Level Warn should work" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Random number msg 644485231'" name="Private Function Tests.C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Random number msg 644485231'" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Warn'" name="Private Function Tests.C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Warn'" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Write-Log -Level Error should work" name="Private Function Tests.Write-Log -Level Error should work" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Random number msg 1694671062'" name="Private Function Tests.C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Random number msg 1694671062'" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Error'" name="Private Function Tests.C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log should contain 'Error'" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Write-Log -NoClobber should throw 'Log file C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log already exists'" name="Private Function Tests.Write-Log -NoClobber should throw 'Log file C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.log already exists'" time="0.0264" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ConvertFrom-UnixTime -UnixTime requires an input" name="Private Function Tests.ConvertFrom-UnixTime -UnixTime requires an input" time="0.1208" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ConvertFrom-UnixTime -UnixTime 456 should return a System.DateTime object" name="Private Function Tests.ConvertFrom-UnixTime -UnixTime 456 should return a System.DateTime object" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ConvertFrom-UnixTime -UnixTime 123 should return 01/01/1970 00:02:03" name="Private Function Tests.ConvertFrom-UnixTime -UnixTime 123 should return 01/01/1970 00:02:03" time="0.0184" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Public Function Tests" executed="True" result="Failure" success="False" time="6.0171" asserts="0" description="Public Function Tests">
        <results>
          <test-case description="Invoke-SlackBot -Token requires an input" name="Public Function Tests.Invoke-SlackBot -Token requires an input" time="5.8003" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Invoke-SlackBot should start cleanly" name="Public Function Tests.Invoke-SlackBot should start cleanly" time="0.0566" asserts="0" success="False" result="Failure" executed="True">
            <failure>
              <message>Expected: the expression not to throw an exception. Message was {Cannot validate argument on parameter 'Token'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.}
    from C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.Tests.ps1:99 char:15
    +             { $SlackBotJob | Receive-Job -ErrorAction Stop } | Should ...
    +               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</message>
              <stack-trace>at line: 99 in C:\Users\ab73541\Documents\GitHub\Powershell-SlackBot\Tests\SlackBot.Tests.ps1
99:             { $SlackBotJob | Receive-Job -ErrorAction Stop } | Should Not Throw
</stack-trace>
            </failure>
          </test-case>
          <test-case description="Send-SlackMsg -Text requires an input" name="Public Function Tests.Send-SlackMsg -Text requires an input" time="0.1484" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Send-SlackMsg -Channel requires an input" name="Public Function Tests.Send-SlackMsg -Channel requires an input" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>